// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BCS.proto

#ifndef PROTOBUF_INCLUDED_BCS_2eproto
#define PROTOBUF_INCLUDED_BCS_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_BCS_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_BCS_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_BCS_2eproto();
namespace BCS {
class Chain;
class ChainDefaultTypeInternal;
extern ChainDefaultTypeInternal _Chain_default_instance_;
class Chain_Block;
class Chain_BlockDefaultTypeInternal;
extern Chain_BlockDefaultTypeInternal _Chain_Block_default_instance_;
class Chain_Transaction;
class Chain_TransactionDefaultTypeInternal;
extern Chain_TransactionDefaultTypeInternal _Chain_Transaction_default_instance_;
}  // namespace BCS
namespace google {
namespace protobuf {
template<> ::BCS::Chain* Arena::CreateMaybeMessage<::BCS::Chain>(Arena*);
template<> ::BCS::Chain_Block* Arena::CreateMaybeMessage<::BCS::Chain_Block>(Arena*);
template<> ::BCS::Chain_Transaction* Arena::CreateMaybeMessage<::BCS::Chain_Transaction>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace BCS {

// ===================================================================

class Chain_Transaction :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BCS.Chain.Transaction) */ {
 public:
  Chain_Transaction();
  virtual ~Chain_Transaction();

  Chain_Transaction(const Chain_Transaction& from);

  inline Chain_Transaction& operator=(const Chain_Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chain_Transaction(Chain_Transaction&& from) noexcept
    : Chain_Transaction() {
    *this = ::std::move(from);
  }

  inline Chain_Transaction& operator=(Chain_Transaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Chain_Transaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chain_Transaction* internal_default_instance() {
    return reinterpret_cast<const Chain_Transaction*>(
               &_Chain_Transaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Chain_Transaction* other);
  friend void swap(Chain_Transaction& a, Chain_Transaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chain_Transaction* New() const final {
    return CreateMaybeMessage<Chain_Transaction>(nullptr);
  }

  Chain_Transaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chain_Transaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chain_Transaction& from);
  void MergeFrom(const Chain_Transaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chain_Transaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string fromaddress = 1;
  bool has_fromaddress() const;
  void clear_fromaddress();
  static const int kFromaddressFieldNumber = 1;
  const ::std::string& fromaddress() const;
  void set_fromaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_fromaddress(::std::string&& value);
  #endif
  void set_fromaddress(const char* value);
  void set_fromaddress(const char* value, size_t size);
  ::std::string* mutable_fromaddress();
  ::std::string* release_fromaddress();
  void set_allocated_fromaddress(::std::string* fromaddress);

  // required string toaddress = 2;
  bool has_toaddress() const;
  void clear_toaddress();
  static const int kToaddressFieldNumber = 2;
  const ::std::string& toaddress() const;
  void set_toaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_toaddress(::std::string&& value);
  #endif
  void set_toaddress(const char* value);
  void set_toaddress(const char* value, size_t size);
  ::std::string* mutable_toaddress();
  ::std::string* release_toaddress();
  void set_allocated_toaddress(::std::string* toaddress);

  // required string hash = 4;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 4;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // required double amount = 3;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 3;
  double amount() const;
  void set_amount(double value);

  // @@protoc_insertion_point(class_scope:BCS.Chain.Transaction)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromaddress_;
  ::google::protobuf::internal::ArenaStringPtr toaddress_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  double amount_;
  friend struct ::TableStruct_BCS_2eproto;
};
// -------------------------------------------------------------------

class Chain_Block :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BCS.Chain.Block) */ {
 public:
  Chain_Block();
  virtual ~Chain_Block();

  Chain_Block(const Chain_Block& from);

  inline Chain_Block& operator=(const Chain_Block& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chain_Block(Chain_Block&& from) noexcept
    : Chain_Block() {
    *this = ::std::move(from);
  }

  inline Chain_Block& operator=(Chain_Block&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Chain_Block& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chain_Block* internal_default_instance() {
    return reinterpret_cast<const Chain_Block*>(
               &_Chain_Block_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Chain_Block* other);
  friend void swap(Chain_Block& a, Chain_Block& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chain_Block* New() const final {
    return CreateMaybeMessage<Chain_Block>(nullptr);
  }

  Chain_Block* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chain_Block>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chain_Block& from);
  void MergeFrom(const Chain_Block& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chain_Block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BCS.Chain.Transaction transactions = 1;
  int transactions_size() const;
  void clear_transactions();
  static const int kTransactionsFieldNumber = 1;
  ::BCS::Chain_Transaction* mutable_transactions(int index);
  ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Transaction >*
      mutable_transactions();
  const ::BCS::Chain_Transaction& transactions(int index) const;
  ::BCS::Chain_Transaction* add_transactions();
  const ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Transaction >&
      transactions() const;

  // required string prevhash = 2;
  bool has_prevhash() const;
  void clear_prevhash();
  static const int kPrevhashFieldNumber = 2;
  const ::std::string& prevhash() const;
  void set_prevhash(const ::std::string& value);
  #if LANG_CXX11
  void set_prevhash(::std::string&& value);
  #endif
  void set_prevhash(const char* value);
  void set_prevhash(const char* value, size_t size);
  ::std::string* mutable_prevhash();
  ::std::string* release_prevhash();
  void set_allocated_prevhash(::std::string* prevhash);

  // required string txroot = 3;
  bool has_txroot() const;
  void clear_txroot();
  static const int kTxrootFieldNumber = 3;
  const ::std::string& txroot() const;
  void set_txroot(const ::std::string& value);
  #if LANG_CXX11
  void set_txroot(::std::string&& value);
  #endif
  void set_txroot(const char* value);
  void set_txroot(const char* value, size_t size);
  ::std::string* mutable_txroot();
  ::std::string* release_txroot();
  void set_allocated_txroot(::std::string* txroot);

  // @@protoc_insertion_point(class_scope:BCS.Chain.Block)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Transaction > transactions_;
  ::google::protobuf::internal::ArenaStringPtr prevhash_;
  ::google::protobuf::internal::ArenaStringPtr txroot_;
  friend struct ::TableStruct_BCS_2eproto;
};
// -------------------------------------------------------------------

class Chain :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BCS.Chain) */ {
 public:
  Chain();
  virtual ~Chain();

  Chain(const Chain& from);

  inline Chain& operator=(const Chain& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chain(Chain&& from) noexcept
    : Chain() {
    *this = ::std::move(from);
  }

  inline Chain& operator=(Chain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Chain& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chain* internal_default_instance() {
    return reinterpret_cast<const Chain*>(
               &_Chain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Chain* other);
  friend void swap(Chain& a, Chain& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chain* New() const final {
    return CreateMaybeMessage<Chain>(nullptr);
  }

  Chain* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chain>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chain& from);
  void MergeFrom(const Chain& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Chain_Transaction Transaction;
  typedef Chain_Block Block;

  // accessors -------------------------------------------------------

  // repeated .BCS.Chain.Block blocks = 1;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 1;
  ::BCS::Chain_Block* mutable_blocks(int index);
  ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Block >*
      mutable_blocks();
  const ::BCS::Chain_Block& blocks(int index) const;
  ::BCS::Chain_Block* add_blocks();
  const ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Block >&
      blocks() const;

  // @@protoc_insertion_point(class_scope:BCS.Chain)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Block > blocks_;
  friend struct ::TableStruct_BCS_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Chain_Transaction

// required string fromaddress = 1;
inline bool Chain_Transaction::has_fromaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Chain_Transaction::clear_fromaddress() {
  fromaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Chain_Transaction::fromaddress() const {
  // @@protoc_insertion_point(field_get:BCS.Chain.Transaction.fromaddress)
  return fromaddress_.GetNoArena();
}
inline void Chain_Transaction::set_fromaddress(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  fromaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BCS.Chain.Transaction.fromaddress)
}
#if LANG_CXX11
inline void Chain_Transaction::set_fromaddress(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  fromaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BCS.Chain.Transaction.fromaddress)
}
#endif
inline void Chain_Transaction::set_fromaddress(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  fromaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BCS.Chain.Transaction.fromaddress)
}
inline void Chain_Transaction::set_fromaddress(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  fromaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BCS.Chain.Transaction.fromaddress)
}
inline ::std::string* Chain_Transaction::mutable_fromaddress() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:BCS.Chain.Transaction.fromaddress)
  return fromaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Chain_Transaction::release_fromaddress() {
  // @@protoc_insertion_point(field_release:BCS.Chain.Transaction.fromaddress)
  if (!has_fromaddress()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return fromaddress_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Chain_Transaction::set_allocated_fromaddress(::std::string* fromaddress) {
  if (fromaddress != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  fromaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromaddress);
  // @@protoc_insertion_point(field_set_allocated:BCS.Chain.Transaction.fromaddress)
}

// required string toaddress = 2;
inline bool Chain_Transaction::has_toaddress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Chain_Transaction::clear_toaddress() {
  toaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Chain_Transaction::toaddress() const {
  // @@protoc_insertion_point(field_get:BCS.Chain.Transaction.toaddress)
  return toaddress_.GetNoArena();
}
inline void Chain_Transaction::set_toaddress(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  toaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BCS.Chain.Transaction.toaddress)
}
#if LANG_CXX11
inline void Chain_Transaction::set_toaddress(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  toaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BCS.Chain.Transaction.toaddress)
}
#endif
inline void Chain_Transaction::set_toaddress(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  toaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BCS.Chain.Transaction.toaddress)
}
inline void Chain_Transaction::set_toaddress(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  toaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BCS.Chain.Transaction.toaddress)
}
inline ::std::string* Chain_Transaction::mutable_toaddress() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:BCS.Chain.Transaction.toaddress)
  return toaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Chain_Transaction::release_toaddress() {
  // @@protoc_insertion_point(field_release:BCS.Chain.Transaction.toaddress)
  if (!has_toaddress()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return toaddress_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Chain_Transaction::set_allocated_toaddress(::std::string* toaddress) {
  if (toaddress != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  toaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), toaddress);
  // @@protoc_insertion_point(field_set_allocated:BCS.Chain.Transaction.toaddress)
}

// required double amount = 3;
inline bool Chain_Transaction::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Chain_Transaction::clear_amount() {
  amount_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double Chain_Transaction::amount() const {
  // @@protoc_insertion_point(field_get:BCS.Chain.Transaction.amount)
  return amount_;
}
inline void Chain_Transaction::set_amount(double value) {
  _has_bits_[0] |= 0x00000008u;
  amount_ = value;
  // @@protoc_insertion_point(field_set:BCS.Chain.Transaction.amount)
}

// required string hash = 4;
inline bool Chain_Transaction::has_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Chain_Transaction::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Chain_Transaction::hash() const {
  // @@protoc_insertion_point(field_get:BCS.Chain.Transaction.hash)
  return hash_.GetNoArena();
}
inline void Chain_Transaction::set_hash(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BCS.Chain.Transaction.hash)
}
#if LANG_CXX11
inline void Chain_Transaction::set_hash(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BCS.Chain.Transaction.hash)
}
#endif
inline void Chain_Transaction::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BCS.Chain.Transaction.hash)
}
inline void Chain_Transaction::set_hash(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BCS.Chain.Transaction.hash)
}
inline ::std::string* Chain_Transaction::mutable_hash() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:BCS.Chain.Transaction.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Chain_Transaction::release_hash() {
  // @@protoc_insertion_point(field_release:BCS.Chain.Transaction.hash)
  if (!has_hash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return hash_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Chain_Transaction::set_allocated_hash(::std::string* hash) {
  if (hash != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:BCS.Chain.Transaction.hash)
}

// -------------------------------------------------------------------

// Chain_Block

// repeated .BCS.Chain.Transaction transactions = 1;
inline int Chain_Block::transactions_size() const {
  return transactions_.size();
}
inline void Chain_Block::clear_transactions() {
  transactions_.Clear();
}
inline ::BCS::Chain_Transaction* Chain_Block::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:BCS.Chain.Block.transactions)
  return transactions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Transaction >*
Chain_Block::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:BCS.Chain.Block.transactions)
  return &transactions_;
}
inline const ::BCS::Chain_Transaction& Chain_Block::transactions(int index) const {
  // @@protoc_insertion_point(field_get:BCS.Chain.Block.transactions)
  return transactions_.Get(index);
}
inline ::BCS::Chain_Transaction* Chain_Block::add_transactions() {
  // @@protoc_insertion_point(field_add:BCS.Chain.Block.transactions)
  return transactions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Transaction >&
Chain_Block::transactions() const {
  // @@protoc_insertion_point(field_list:BCS.Chain.Block.transactions)
  return transactions_;
}

// required string prevhash = 2;
inline bool Chain_Block::has_prevhash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Chain_Block::clear_prevhash() {
  prevhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Chain_Block::prevhash() const {
  // @@protoc_insertion_point(field_get:BCS.Chain.Block.prevhash)
  return prevhash_.GetNoArena();
}
inline void Chain_Block::set_prevhash(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  prevhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BCS.Chain.Block.prevhash)
}
#if LANG_CXX11
inline void Chain_Block::set_prevhash(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  prevhash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BCS.Chain.Block.prevhash)
}
#endif
inline void Chain_Block::set_prevhash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  prevhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BCS.Chain.Block.prevhash)
}
inline void Chain_Block::set_prevhash(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  prevhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BCS.Chain.Block.prevhash)
}
inline ::std::string* Chain_Block::mutable_prevhash() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:BCS.Chain.Block.prevhash)
  return prevhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Chain_Block::release_prevhash() {
  // @@protoc_insertion_point(field_release:BCS.Chain.Block.prevhash)
  if (!has_prevhash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return prevhash_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Chain_Block::set_allocated_prevhash(::std::string* prevhash) {
  if (prevhash != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  prevhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prevhash);
  // @@protoc_insertion_point(field_set_allocated:BCS.Chain.Block.prevhash)
}

// required string txroot = 3;
inline bool Chain_Block::has_txroot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Chain_Block::clear_txroot() {
  txroot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Chain_Block::txroot() const {
  // @@protoc_insertion_point(field_get:BCS.Chain.Block.txroot)
  return txroot_.GetNoArena();
}
inline void Chain_Block::set_txroot(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  txroot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BCS.Chain.Block.txroot)
}
#if LANG_CXX11
inline void Chain_Block::set_txroot(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  txroot_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BCS.Chain.Block.txroot)
}
#endif
inline void Chain_Block::set_txroot(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  txroot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BCS.Chain.Block.txroot)
}
inline void Chain_Block::set_txroot(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  txroot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BCS.Chain.Block.txroot)
}
inline ::std::string* Chain_Block::mutable_txroot() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:BCS.Chain.Block.txroot)
  return txroot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Chain_Block::release_txroot() {
  // @@protoc_insertion_point(field_release:BCS.Chain.Block.txroot)
  if (!has_txroot()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return txroot_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Chain_Block::set_allocated_txroot(::std::string* txroot) {
  if (txroot != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  txroot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txroot);
  // @@protoc_insertion_point(field_set_allocated:BCS.Chain.Block.txroot)
}

// -------------------------------------------------------------------

// Chain

// repeated .BCS.Chain.Block blocks = 1;
inline int Chain::blocks_size() const {
  return blocks_.size();
}
inline void Chain::clear_blocks() {
  blocks_.Clear();
}
inline ::BCS::Chain_Block* Chain::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:BCS.Chain.blocks)
  return blocks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Block >*
Chain::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:BCS.Chain.blocks)
  return &blocks_;
}
inline const ::BCS::Chain_Block& Chain::blocks(int index) const {
  // @@protoc_insertion_point(field_get:BCS.Chain.blocks)
  return blocks_.Get(index);
}
inline ::BCS::Chain_Block* Chain::add_blocks() {
  // @@protoc_insertion_point(field_add:BCS.Chain.blocks)
  return blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BCS::Chain_Block >&
Chain::blocks() const {
  // @@protoc_insertion_point(field_list:BCS.Chain.blocks)
  return blocks_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace BCS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_BCS_2eproto
